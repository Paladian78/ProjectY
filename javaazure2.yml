# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- 'javaapp2'

variables:
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: Maven Package and Publish Artifacts
    pool:
      vmImage: $(vmImageName)

    steps:
    - task: Maven@3
      displayName: 'Maven Package'
      inputs:
        mavenPomFile: 'pom.xml'

    - task: CopyFiles@2
      displayName: 'Copy Files to artifact staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: $(Build.ArtifactStagingDirectory)

    - upload: $(Build.ArtifactStagingDirectory)
      artifact: drop

- stage: Deploy
  displayName: Deploy Stage
  jobs:
  - job: DeployAzure
    displayName: DeployonAzure
    pool:
      vmImage: $(vmImageName)
    steps:
      - task: DownloadBuildArtifacts@1
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          downloadPath: '$(System.ArtifactsDirectory)'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'cd'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            cd /home/vsts/work/1/s
            ls
      - task: AzureRmWebAppDeployment@4
        inputs:
          ConnectionType: 'AzureRM'
          azureSubscription: 'Azure for Students (03951b14-d082-4bfd-b04c-d7512e31610c)'
          appType: 'webAppLinux'
          WebAppName: 'nodejs-dploy'
          packageForLinux: '/home/vsts/work/1/a/**/target/*.?(war|jar)'
          RuntimeStack: 'JAVA|17-java17'